version: "3"

services:
  apache:
    build:
      context: ./bin/apache
    container_name: "${COMPOSE_PROJECT_NAME}apache"
    links:
      - php
    depends_on:
      - php
    ports:
      - "${HOST_MACHINE_UNSECURE_APACHE_PORT}:80"
      - "${HOST_MACHINE_SECURE_APACHE_PORT}:443"
    # networks:
    #   - backend
    #   - frontend
    volumes:
      - ${DOCUMENT_ROOT-./www}:/var/www/html:rw
      # - ${VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
      - ${VHOSTS_DIR-./config/vhosts}:/usr/local/apache2/conf
      # - ${SSL_DIR-./config/ssl}:/etc/apache2/ssl
      - ${SSL_DIR-./config/ssl}:/usr/local/apache2/ssl
      - ${APACHE_LOG_DIR-./logs/apache2}:/var/log/apache2
      - ${XDEBUG_LOG_DIR-./logs/xdebug}:/var/log/xdebug
    environment:
      APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
      PMA_PORT: ${HOST_MACHINE_PMA_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      HOST_MACHINE_MYSQL_PORT: ${HOST_MACHINE_MYSQL_PORT}
      # XDEBUG_CONFIG: "client_host=host.docker.internal remote_port=${XDEBUG_PORT}"
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"

  nginx:
    build:
      context: ./bin/nginx
    container_name: "${COMPOSE_PROJECT_NAME}nginx"
    links:
      - php
    depends_on:
      - php
    # networks:
    #   - backend
    #   - frontend
    ports:
      - "${HOST_MACHINE_UNSECURE_NGINX_PORT}:80"
      - "${HOST_MACHINE_SECURE_NGINX_PORT}:443"
      - "4000:4000"
      - "4001:4001"
    volumes:
      - ${DOCUMENT_ROOT-./www}:/var/www/html:rw
      - ${NGINX_CONFIG_DIR-./config/nginx}:/etc/nginx/conf.d
      - ${NGINX_CONFIG_DIR-./config/nginx}/templates:/etc/nginx/templates
      - ${SSL_DIR-./config/ssl}:/etc/nginx/ssl
      - ${NGINX_LOG_DIR-./logs/nginx}:/var/log/nginx
    environment:
      NGINX_DOCUMENT_ROOT: ${NGINX_DOCUMENT_ROOT-/var/www/html}

  php:
    build:
      context: ./bin/${PHPVERSION}
    container_name: "${COMPOSE_PROJECT_NAME}php"
    # hostname: php73
    # env_file: .env
    # depends_on:
    #   - mysql
    links:
      - mysql
    # ports:
      # - "127.0.0.1:${HOST_MACHINE_PHP_FPM_PORT}:9000"
    # networks:
    #   - backend
    volumes:
      - ${DOCUMENT_ROOT-./www}:/var/www/html:rw
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
      - ${XDEBUG_LOG_DIR-./logs/xdebug}:/var/log/xdebug
    environment:
      PMA_PORT: ${HOST_MACHINE_PMA_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      HOST_MACHINE_MYSQL_PORT: ${HOST_MACHINE_MYSQL_PORT}
      XDEBUG_CONFIG: "client_host=host.docker.internal remote_port=${XDEBUG_PORT}"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mysql:
    build:
      context: "./bin/${MYSQL}"
    container_name: "${COMPOSE_PROJECT_NAME}mysql"
    # restart: "always"
    # ports:
      # - "127.0.0.1:${HOST_MACHINE_MYSQL_PORT}:3306"
    # networks:
    #   - backend
    volumes:
      - ${MYSQL_INITDB_DIR-./config/initdb}:/docker-entrypoint-initdb.d
      - ${MYSQL_DATA_DIR-./data/mysql}:/var/lib/mysql
      - ${MYSQL_LOG_DIR-./logs/mysql}:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  phpmyadmin:
    image: phpmyadmin
    container_name: "${COMPOSE_PROJECT_NAME}phpmyadmin"
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      UPLOAD_LIMIT: ${UPLOAD_LIMIT}
      MEMORY_LIMIT: ${MEMORY_LIMIT}
    ports:
      - "${HOST_MACHINE_PMA_PORT}:80"
      - "${HOST_MACHINE_PMA_SECURE_PORT}:443"
    # networks:
    #   - backend
    #   - frontend
    volumes:
      - /sessions
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
    depends_on:
      - mysql

  redis:
    build:
      context: "./bin/redis"
    container_name: "${COMPOSE_PROJECT_NAME}redis"
    ports:
      - "127.0.0.1:${HOST_MACHINE_REDIS_PORT}:6379"
    # networks:
    #   - backend

  mongo:
    build:
      context: "./bin/mongo"
    # restart: always
    container_name: '${COMPOSE_PROJECT_NAME}mongo'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    ports:
      - "127.0.0.1:${HOST_MACHINE_MONGO_PORT}:27017"
    # networks:
    #   - backend
    volumes:
      - ${MONGO_DATA_DIR-./data/mongo}:/data/db
      - ${MONGO_ARCHIVE_DIR-./data/mongo/archive}:/Databases/dev.archive
      - ${MONGO_LOG_DIR-./logs/mongo}:/Databases/production

  mongo-express:
    image: mongo-express
    # restart: always
    container_name: '${COMPOSE_PROJECT_NAME}mongo-express'
    ports:
      - "${HOST_MACHINE_ME_PORT}:8081"
    # networks:
    #   - backend
    #   - frontend
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASSWORD}@mongo:27017/?authSource=admin
#      ME_CONFIG_BASICAUTH_USERNAME: ${ME_USER}
#      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_PASSWORD}
    depends_on:
      - mongo
    links:
      - mongo

# networks:
#   backend:
#     driver: bridge
#   frontend:
